{"version":3,"sources":["components/Task.js","components/Tasks.js","components/NewTask.js","App.js","index.js"],"names":["Task","props","taskClassName","status","className","description","icon","faPencilAlt","onClick","task","console","log","key","faTrashAlt","Tasks","items","map","id","NewTask","useState","enteredDescription","setEnteredTask","onSubmit","event","preventDefault","taskData","Math","random","onSaveData","type","placeholder","value","onChange","target","faPlus","DUMMY_TASKS","App","tasks","setTask","removeTask","onRemoveTask","prevTasks","remove","ReactDOM","render","document","getElementById"],"mappings":"2SA6BeA,EAtBF,SAAAC,GACZ,IAAMC,GAAiC,IAAjBD,EAAME,OAAkB,4CAA8C,oBAM5F,OACC,sBAAKC,UAAU,OAAf,UACC,wBAAQA,UAAWF,EAAnB,SAAmCD,EAAMI,cACzC,sBAAKD,UAAU,cAAf,UACC,wBAAQA,UAAU,oBAAlB,SACC,cAAC,IAAD,CAAiBE,KAAMC,QAExB,wBAAQH,UAAU,sBAAsBI,QAXtB,SAAAC,GACpBC,QAAQC,IAAIV,EAAMW,MAUhB,SACC,cAAC,IAAD,CAAiBN,KAAMO,eCDbC,EAfD,SAAAb,GAEb,OACC,sBAAKG,UAAU,QAAf,UACC,qBAAKA,UAAU,iBAAf,4BACA,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,cAAf,SACEH,EAAMc,MAAMC,KAAI,SAAAP,GAAI,OACpB,cAAC,EAAD,CAAoBJ,YAAaI,EAAKJ,YAAaF,OAAQM,EAAKN,QAArDM,EAAKQ,aC4BNC,G,MAnCC,SAAAjB,GACf,MAA6CkB,mBAAS,IAAtD,mBAAOC,EAAP,KAA2BC,EAA3B,KAmBA,OACC,uBAAMjB,UAAU,WAAWkB,SAdN,SAAAC,GACrBA,EAAMC,iBAEN,IAAMC,EAAW,CAChBR,GAAIS,KAAKC,SACTtB,YAAae,GAGdnB,EAAM2B,WAAWH,GAEjBJ,EAAe,KAIf,UACC,uBACCjB,UAAU,kBACVyB,KAAK,OACLC,YAAY,uBACZC,MAAOX,EACPY,SAxBuB,SAAAT,GACzBF,EAAeE,EAAMU,OAAOF,UAwB3B,wBAAQ3B,UAAU,mBAAmByB,KAAK,SAA1C,SACC,cAAC,IAAD,CAAiBvB,KAAM4B,aC7BrBC,G,MAAc,CACnB,CACClB,GAAI,EACJZ,YAAa,4BACbF,QAAQ,GAET,CACCc,GAAI,EACJZ,YAAa,wBACbF,QAAQ,GAET,CACCc,GAAI,EACJZ,YAAa,qBACbF,QAAQ,GAET,CACCc,GAAI,EACJZ,YAAa,oBACbF,QAAQ,KA4BKiC,MAxBf,WACC,MAAqCjB,mBAASgB,GAA9C,mBAAOE,EAAP,KAAcC,EAAd,KAAuBC,EAAvB,KAeA,OACC,gCACC,cAAC,EAAD,CAAOxB,MAAOsB,EAAOG,aARG,SAAA/B,GACzB8B,GAAW,SAAAE,GACV,OAAO,YAAIA,GAAWC,OAAOjC,SAO7B,cAAC,EAAD,CAASmB,WAfY,SAAAnB,GACtB6B,GAAQ,SAAAG,GACP,MAAM,CAAEhC,GAAR,mBAAiBgC,c,MC9BpBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cc63b75b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport './Task.css'\r\n\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Task = props => {\r\n\tconst taskClassName = props.status === true ? 'task__description task__description--done' : 'task__description'\r\n\r\n\tconst onRemoveTask = task => {\r\n\t\tconsole.log(props.key)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='task'>\r\n\t\t\t<button className={taskClassName}>{props.description}</button>\r\n\t\t\t<div className='task__panel'>\r\n\t\t\t\t<button className='task__panel--edit'>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPencilAlt} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='task__panel--remove' onClick={onRemoveTask}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faTrashAlt} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\n\r\nimport './Tasks.css'\r\n\r\nimport Task from './Task'\r\n\r\nconst Tasks = props => {\r\n\r\n\treturn (\r\n\t\t<div className='tasks'>\r\n\t\t\t<div className='tasks__heading'>Your todo list</div>\r\n\t\t\t<div className='tasks__separator'></div>\r\n\t\t\t<div className='tasks__list'>\r\n\t\t\t\t{props.items.map(task => (\r\n\t\t\t\t\t<Task key={task.id} description={task.description} status={task.status} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Tasks\r\n","import React, { useState } from 'react'\r\n\r\nimport './NewTask.css'\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst NewTask = props => {\r\n\tconst [enteredDescription, setEnteredTask] = useState('')\r\n\r\n\tconst taskChangeHandler = event => {\r\n\t\tsetEnteredTask(event.target.value)\r\n\t}\r\n\r\n\tconst submitHandler = event => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst taskData = {\r\n\t\t\tid: Math.random(),\r\n\t\t\tdescription: enteredDescription,\r\n\t\t}\r\n\r\n\t\tprops.onSaveData(taskData)\r\n\r\n\t\tsetEnteredTask('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className='new-task' onSubmit={submitHandler}>\r\n\t\t\t<input\r\n\t\t\t\tclassName='new-task__input'\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='What you need to do?'\r\n\t\t\t\tvalue={enteredDescription}\r\n\t\t\t\tonChange={taskChangeHandler}></input>\r\n\t\t\t<button className='new-task__button' type='submit'>\r\n\t\t\t\t<FontAwesomeIcon icon={faPlus} />\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default NewTask\r\n","import React, { useState } from 'react'\n\nimport Tasks from './components/Tasks'\nimport NewTask from './components/NewTask'\n\nimport './App.css'\n\nconst DUMMY_TASKS = [\n\t{\n\t\tid: 1,\n\t\tdescription: 'Wyrzucić śmieci',\n\t\tstatus: false,\n\t},\n\t{\n\t\tid: 2,\n\t\tdescription: 'Wytrzeć naczynia',\n\t\tstatus: true,\n\t},\n\t{\n\t\tid: 3,\n\t\tdescription: 'Zrobić zakupy',\n\t\tstatus: false,\n\t},\n\t{\n\t\tid: 4,\n\t\tdescription: 'Skosić trawe',\n\t\tstatus: true,\n\t},\n]\n\nfunction App() {\n\tconst [tasks, setTask, removeTask] = useState(DUMMY_TASKS)\n\t// const [tasks, removeTask] = useState(DUMMY_TASKS)\n\n\tconst addTaskHandler = task => {\n\t\tsetTask(prevTasks => {\n\t\t\treturn [task, ...prevTasks]\n\t\t})\n\t}\n\n\tconst removeTaskHandler = task => {\n\t\tremoveTask(prevTasks => {\n\t\t\treturn [...prevTasks].remove[task]\n\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Tasks items={tasks} onRemoveTask={removeTaskHandler}/>\n\t\t\t<NewTask onSaveData={addTaskHandler} />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}